% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/methods__client_bearer_req.R
\name{client_bearer_req}
\alias{client_bearer_req}
\title{Build an authorized httr2 request with Bearer token}
\usage{
client_bearer_req(token, url, method = "GET", headers = NULL, query = NULL)
}
\arguments{
\item{token}{Either an \link{OAuthToken} object or a raw access token string.}

\item{url}{The absolute URL to call.}

\item{method}{Optional HTTP method (character). Defaults to "GET".}

\item{headers}{Optional named list or named character vector of extra
headers to set on the request. Header names are case-insensitive.
Any user-supplied \code{Authorization}
header is ignored to ensure the Bearer token set by this function is not
overridden.}

\item{query}{Optional named list of query parameters to append to the URL.}
}
\value{
An httr2 request object, ready to be further customized or
performed with \code{\link[httr2:req_perform]{httr2::req_perform()}}.
}
\description{
Convenience helper to reduce boilerplate when calling downstream APIs.
It creates an \code{\link[httr2:request]{httr2::request()}} for the given URL, attaches the
\verb{Authorization: Bearer <token>} header, and applies the package's standard
HTTP defaults (timeout and User-Agent).

Accepts either a raw access token string or an \link{OAuthToken} object.
}
\examples{
# Make request using OAuthToken object
# (code is not run because it requires a real token from user interaction)
\dontrun{
# Get OAuthToken
# (typically provided as reactive return value by `oauth_module_server()`)
token <- OAuthToken(...)

# Build request
request <- client_bearer_req(
  token, 
  "https://api.example.com/resource", 
  query = list(limit = 5)
)

# Perform rquest
response <- httr2::req_perform(request)
}
}
